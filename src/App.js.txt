import React, { useState, useEffect } from 'react';

const App = () => {
  const [activeSection, setActiveSection] = useState('inicio');
  const [isNdaModalOpen, setIsNdaModalOpen] = useState(false);
  const [formData, setFormData] = useState({ name: '', email: '', message: '' });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitSuccess, setSubmitSuccess] = useState(false);

  // Handle form input changes
  const handleInputChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  // Handle form submission
  const handleSubmit = (e) => {
    e.preventDefault();
    setIsSubmitting(true);
    
    // Simulate form submission
    setTimeout(() => {
      setIsSubmitting(false);
      setSubmitSuccess(true);
      setFormData({ name: '', email: '', message: '' });
      
      // Hide success message after 3 seconds
      setTimeout(() => {
        setSubmitSuccess(false);
      }, 3000);
    }, 1500);
  };

  // Cosmic background animation
  useEffect(() => {
    const createStars = () => {
      const starsContainer = document.getElementById('stars-container');
      if (!starsContainer) return;
      
      // Clear existing stars
      starsContainer.innerHTML = '';
      
      // Create 200 stars with random positions and sizes
      for (let i = 0; i < 200; i++) {
        const star = document.createElement('div');
        star.className = 'star';
        star.style.left = `${Math.random() * 100}%`;
        star.style.top = `${Math.random() * 100}%`;
        star.style.width = `${Math.random() * 2 + 1}px`;
        star.style.height = star.style.width;
        star.style.opacity = Math.random() * 0.8 + 0.2;
        
        // Add pulsing animation with different delays
        star.style.animation = `pulse ${Math.random() * 4 + 3}s infinite ease-in-out`;
        
        starsContainer.appendChild(star);
      }
    };
    
    createStars();
    const interval = setInterval(createStars, 10000);
    
    return () => clearInterval(interval);
  }, []);

  // Navigation handler - fixed to work with anchors
  const handleNavClick = (section) => {
    setActiveSection(section);
    
    // Scroll to section
    const element = document.getElementById(section);
    if (element) {
      window.scrollTo({
        top: element.offsetTop - 80,
        behavior: 'smooth'
      });
    }
    
    // Update URL hash
    history.pushState(null, '', `#${section}`);
  };

  // Handle browser back/forward buttons
  useEffect(() => {
    const handleHashChange = () => {
      const hash = window.location.hash.substring(1) || 'inicio';
      setActiveSection(hash);
      
      // Scroll to section
      const element = document.getElementById(hash);
      if (element) {
        window.scrollTo({
          top: element.offsetTop - 80,
          behavior: 'instant'
        });
      }
    };
    
    window.addEventListener('hashchange', handleHashChange);
    handleHashChange(); // Initialize on load
    
    return () => window.removeEventListener('hashchange', handleHashChange);
  }, []);

  // Mock data for projects, team, and careers
  const projects = [
    {
      title: "OMNIVERSE: THE PRIMORDIAL BATTLEZONE",
      description: "Un battle royale revolucionario que fusiona combate estratégico, economía blockchain y narrativa emergente en un universo primordial donde cada batalla reescribe la historia.",
      features: [
        "Battle Royale de nueva generación",
        "Modos cooperativos y competitivos",
        "Economía del juego integrada",
        "Multiverso interconectado"
      ],
      status: "PROYECTO PRINCIPAL"
    }
  ];

  const team = [
    {
      name: "ALEX RIVERA",
      role: "CEO & Fundador",
      bio: "Visionario con 15 años en la industria gaming. Anteriormente en Epic Games y Blizzard. Especialista en diseño de experiencias inmersivas y economías digitales."
    },
    {
      name: "MAYA CHEN",
      role: "CTO & Co-fundadora",
      bio: "Experta en arquitecturas escalables y blockchain gaming. Ex-líder técnico en Riot Games. Pionera en la integración de tecnologías Web3 en experiencias gaming masivas."
    },
    {
      name: "JORDAN KIM",
      role: "Director Creativo",
      bio: "Artista visionario con background en cine y gaming. Ex-director de arte en Naughty Dog. Especialista en narrativa visual y worldbuilding para universos gaming expansivos."
    }
  ];

  const careers = [
    {
      title: "DESARROLLADOR SENIOR",
      description: "Lidera el desarrollo de sistemas core y arquitectura del juego.",
      requirements: ["5+ años experiencia en Unity/Unreal", "Conocimiento en C++/C#", "Experiencia en multijugador"]
    },
    {
      title: "ARTISTA 3D SENIOR",
      description: "Crea assets visuales que definan la estética de nuestros universos.",
      requirements: ["Experiencia en Maya/Blender", "Conocimiento en texturizado", "Portfolio sólido"]
    },
    {
      title: "DISEÑADOR DE JUEGOS",
      description: "Diseña mecánicas innovadoras y sistemas de juego únicos.",
      requirements: ["Experiencia en game design", "Conocimiento en balance", "Creatividad excepcional"]
    }
  ];

  // Render different sections based on active section
  const renderSection = () => {
    switch (activeSection) {
      case 'inicio':
        return (
          <div id="inicio" className="min-h-screen flex flex-col">
            {/* Hero Section */}
            <div className="flex-1 flex items-center justify-center px-6 pt-20">
              <div className="text-center relative z-20">
                <h1 className="text-6xl md:text-8xl font-bold mb-6 quantum-lemon-title text-white">
                  OMNIVERSE
                  <br />
                  GAMES
                </h1>
                <p className="text-2xl md:text-3xl mb-8 text-cyan-400">
                  CREAMOS UNIVERSOS INMERSIVOS
                </p>
                <p className="text-lg md:text-xl mb-12 text-cyan-300">
                  Donde cada batalla cuenta una historia épica
                </p>
                
                <div className="flex flex-col sm:flex-row gap-4 justify-center">
                  <button 
                    onClick={() => handleNavClick('proyectos')}
                    className="sci-fi-button text-xl bg-gradient-to-r from-cyan-500 to-cyan-600"
                  >
                    <svg className="w-5 h-5 inline mr-2" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M10 2a8 8 0 100 16 8 8 0 000-16zm0 14a6 6 0 110-12 6 6 0 010 12z"/>
                      <path d="M10 6a4 4 0 100 8 4 4 0 000-8z"/>
                    </svg>
                    Explorar Proyectos
                  </button>
                  
                  <button 
                    onClick={() => setIsNdaModalOpen(true)}
                    className="sci-fi-button text-xl border-2 border-cyan-400 bg-transparent hover:bg-cyan-900/30"
                  >
                    <svg className="w-5 h-5 inline mr-2" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M10 2a8 8 0 100 16 8 8 0 000-16zm0 14a6 6 0 110-12 6 6 0 010 12z"/>
                      <path d="M10 6a4 4 0 100 8 4 4 0 000-8z"/>
                    </svg>
                    Inversores NDA
                  </button>
                </div>
              </div>
            </div>

            {/* Vision Section */}
            <div id="vision" className="py-20 bg-[#0a0f1a]">
              <div className="container mx-auto px-6">
                <div className="text-center mb-16">
                  <h2 className="text-4xl font-bold mb-6">NUESTRA VISIÓN</h2>
                  <p className="text-gray-400 max-w-3xl mx-auto">
                    Revolucionar la industria del gaming creando experiencias que trascienden lo virtual
                  </p>
                </div>
                
                <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                  {[
                    {
                      icon: "🚀",
                      title: "INNOVACIÓN",
                      description: "Pioneros en mecánicas de juego revolucionarias que redefinen los límites de la experiencia gaming."
                    },
                    {
                      icon: "🌍",
                      title: "COMUNIDAD",
                      description: "Construimos ecosistemas donde jugadores de todo el mundo conectan y crean historias épicas juntos."
                    },
                    {
                      icon: "⭐",
                      title: "EXCELENCIA",
                      description: "Cada detalle cuenta. Desde el arte conceptual hasta la jugabilidad final, perseguimos la perfección."
                    }
                  ].map((item, index) => (
                    <div key={index} className="vision-card">
                      <div className="icon text-2xl">{item.icon}</div>
                      <h3 className="text-xl font-bold mb-4">{item.title}</h3>
                      <p className="text-gray-300">{item.description}</p>
                    </div>
                  ))}
                </div>
              </div>
            </div>

            {/* Manifesto Section */}
            <div id="manifiesto" className="py-20 bg-[#0a0f1a]">
              <div className="container mx-auto px-6">
                <div className="text-center mb-16">
                  <h2 className="text-4xl font-bold mb-6">NUESTRO MANIFIESTO</h2>
                </div>
                
                <div className="max-w-4xl mx-auto">
                  <div className="space-y-8 text-gray-300">
                    <div className="border-l-4 border-cyan-400 pl-6">
                      <p>"En Omniverse Games creemos que los videojuegos son el arte del futuro. No solo entretenemos, creamos mundos donde las decisiones importan y cada jugador puede escribir su propia leyenda."</p>
                    </div>
                    
                    <div className="border-l-4 border-cyan-400 pl-6">
                      <p>"Nuestros universos no tienen límites. Cada título que desarrollamos es una puerta a experiencias que desafían la realidad y expanden los horizontes de lo posible."</p>
                    </div>
                    
                    <div className="border-l-4 border-cyan-400 pl-6">
                      <p>"Somos arquitectos de sueños digitales, ingenieros de emociones, y guardianes de historias que perdurarán en la memoria de generaciones."</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* Investment Section */}
            <div id="inversores" className="py-20 bg-[#0a0f1a]">
              <div className="container mx-auto px-6 text-center">
                <h2 className="text-4xl font-bold mb-6">EL FUTURO DEL GAMING COMIENZA AQUÍ</h2>
                <p className="text-gray-400 max-w-3xl mx-auto mb-12">
                  Únete a nosotros en la creación de experiencias que cambiarán la industria para siempre
                </p>
                
                <div className="flex flex-col sm:flex-row justify-center gap-4">
                  <button 
                    onClick={() => setIsNdaModalOpen(true)}
                    className="sci-fi-button text-xl bg-gradient-to-r from-cyan-500 to-cyan-600"
                  >
                    Contactar Inversores
                  </button>
                  
                  <button 
                    onClick={() => handleNavClick('carreras')}
                    className="sci-fi-button text-xl border-2 border-cyan-400 bg-transparent hover:bg-cyan-900/30"
                  >
                    Oportunidades de Carrera
                  </button>
                </div>
              </div>
            </div>
          </div>
        );
        
      case 'proyectos':
        return (
          <div id="proyectos" className="min-h-screen py-20 bg-[#0a0f1a]">
            <div className="container mx-auto px-6">
              <div className="text-center mb-16">
                <h2 className="text-4xl font-bold mb-6">NUESTROS PROYECTOS</h2>
                <p className="text-gray-400 max-w-3xl mx-auto">
                  Cada universo que creamos es una nueva frontera en la experiencia gaming
                </p>
              </div>
              
              <div className="max-w-4xl mx-auto">
                {projects.map((project, index) => (
                  <div key={index} className="bg-gray-800 rounded-lg p-8 mb-8">
                    <div className="flex items-center mb-4">
                      <span className="bg-cyan-500 text-black px-3 py-1 rounded-full text-sm font-bold">
                        {project.status}
                      </span>
                    </div>
                    
                    <h3 className="text-3xl font-bold mb-4 quantum-lemon-title text-white">
                      {project.title}
                    </h3>
                    
                    <p className="text-gray-300 mb-6">
                      {project.description}
                    </p>
                    
                    <div className="space-y-3 mb-8">
                      {project.features.map((feature, featureIndex) => (
                        <div key={featureIndex} className="flex items-center">
                          <svg className="w-5 h-5 text-cyan-400 mr-2" fill="currentColor" viewBox="0 0 20 20">
                            <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                          </svg>
                          <span className="text-gray-300">{feature}</span>
                        </div>
                      ))}
                    </div>
                    
                    <div className="flex flex-col sm:flex-row gap-4">
                      <button className="sci-fi-button text-xl bg-gradient-to-r from-cyan-500 to-cyan-600">
                        Explorar Juego
                      </button>
                      <button className="sci-fi-button text-xl border-2 border-cyan-400 bg-transparent hover:bg-cyan-900/30">
                        Ver Trailer
                      </button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        );
        
      case 'equipo':
        return (
          <div id="equipo" className="min-h-screen py-20 bg-[#0a0f1a]">
            <div className="container mx-auto px-6">
              <div className="text-center mb-16">
                <h2 className="text-4xl font-bold mb-6">NUESTRO EQUIPO</h2>
                <p className="text-gray-400 max-w-3xl mx-auto">
                  Visionarios, creadores y pioneros unidos por una pasión: revolucionar la industria gaming
                </p>
              </div>
              
              <div className="text-center mb-16">
                <h3 className="text-3xl font-bold mb-6">LIDERAZGO</h3>
                <p className="text-gray-400">Los arquitectos de nuestra visión</p>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                {team.map((member, index) => (
                  <div key={index} className="bg-gray-800 rounded-lg p-8 text-center">
                    <div className="w-24 h-24 mx-auto mb-6 border-2 border-cyan-400 rounded-full flex items-center justify-center">
                      <svg className="w-12 h-12 text-cyan-400" fill="currentColor" viewBox="0 0 20 20">
                        <path fillRule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clipRule="evenodd" />
                      </svg>
                    </div>
                    
                    <h4 className="text-xl font-bold mb-2">{member.name}</h4>
                    <p className="text-cyan-400 font-medium mb-4">{member.role}</p>
                    <p className="text-gray-300 text-sm">{member.bio}</p>
                  </div>
                ))}
              </div>
            </div>
          </div>
        );
        
      case 'carreras':
        return (
          <div id="carreras" className="min-h-screen py-20 bg-[#0a0f1a]">
            <div className="container mx-auto px-6">
              <div className="text-center mb-16">
                <h2 className="text-4xl font-bold mb-6">OPORTUNIDADES DISPONIBLES</h2>
                <p className="text-gray-400 max-w-3xl mx-auto">
                  Buscamos talentos apasionados para crear el futuro del gaming. Forma parte de un equipo que está revolucionando la industria.
                </p>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                {careers.map((job, index) => (
                  <div key={index} className="bg-gray-800 rounded-lg p-8">
                    <h4 className="text-xl font-bold mb-4 text-cyan-400">{job.title}</h4>
                    <p className="text-gray-300 mb-6">{job.description}</p>
                    
                    <div className="space-y-2 mb-6">
                      {job.requirements.map((req, reqIndex) => (
                        <div key={reqIndex} className="flex items-center">
                          <svg className="w-5 h-5 text-cyan-400 mr-2" fill="currentColor" viewBox="0 0 20 20">
                            <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                          </svg>
                          <span className="text-gray-300">{req}</span>
                        </div>
                      ))}
                    </div>
                    
                    <button className="sci-fi-button text-xl w-full">
                      Aplicar
                    </button>
                  </div>
                ))}
              </div>
            </div>
          </div>
        );
        
      case 'contacto':
        return (
          <div id="contacto" className="min-h-screen py-20 bg-[#0a0f1a]">
            <div className="container mx-auto px-6">
              <div className="text-center mb-16">
                <h2 className="text-4xl font-bold mb-6">CONECTEMOS</h2>
                <p className="text-gray-400 max-w-3xl mx-auto">
                  ¿Tienes una visión que cambiará el gaming? ¿Quieres invertir en el futuro del entretenimiento? Hablemos sobre cómo podemos crear algo extraordinario juntos.
                </p>
              </div>
              
              <div className="max-w-6xl mx-auto">
                <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
                  <div>
                    <h3 className="text-2xl font-bold mb-6">ENVÍANOS UN MENSAJE</h3>
                    <form onSubmit={handleSubmit}>
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                        <input
                          type="text"
                          name="name"
                          placeholder="Nombre Completo *"
                          value={formData.name}
                          onChange={handleInputChange}
                          className="form-input"
                          required
                        />
                        <input
                          type="email"
                          name="email"
                          placeholder="Email *"
                          value={formData.email}
                          onChange={handleInputChange}
                          className="form-input"
                          required
                        />
                      </div>
                      
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                        <input
                          type="text"
                          name="company"
                          placeholder="Empresa/Organización"
                          value={formData.company || ''}
                          onChange={(e) => setFormData({...formData, company: e.target.value})}
                          className="form-input"
                        />
                        <select
                          name="type"
                          className="form-input"
                          required
                        >
                          <option value="">Tipo de Consulta *</option>
                          <option value="investment">Inversión</option>
                          <option value="press">Prensa</option>
                          <option value="career">Carrera</option>
                          <option value="general">General</option>
                        </select>
                      </div>
                      
                      <textarea
                        name="message"
                        placeholder="Mensaje *"
                        value={formData.message}
                        onChange={handleInputChange}
                        className="form-input h-24 mb-6"
                        required
                      ></textarea>
                      
                      <button
                        type="submit"
                        disabled={isSubmitting}
                        className="sci-fi-button text-xl w-full"
                      >
                        {isSubmitting ? 'Enviando...' : 'Enviar Mensaje'}
                      </button>
                    </form>
                    
                    {submitSuccess && (
                      <div className="success-message mt-4">
                        Gracias por tu mensaje. Te responderemos en breve.
                      </div>
                    )}
                  </div>
                  
                  <div>
                    <h3 className="text-2xl font-bold mb-6">INFORMACIÓN DE CONTACTO</h3>
                    
                    <div className="space-y-6">
                      <div className="flex items-start">
                        <div className="w-10 h-10 bg-cyan-500 rounded-full flex items-center justify-center mr-4 mt-1">
                          <svg className="w-5 h-5 text-black" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884zM18 8a2 2 0 11-4 0 2 2 0 014 0zM11 11a2 2 0 11-4 0 2 2 0 014 0zM15 14a2 2 0 11-4 0 2 2 0 014 0z" />
                          </svg>
                        </div>
                        <div>
                          <h4 className="font-bold text-white mb-1">Email Directo</h4>
                          <p className="text-gray-300">hello@omniversestudios.com</p>
                          <p className="text-gray-400 text-sm">Respuesta en 24-48 horas</p>
                        </div>
                      </div>
                      
                      <div className="flex items-start">
                        <div className="w-10 h-10 bg-cyan-500 rounded-full flex items-center justify-center mr-4 mt-1">
                          <svg className="w-5 h-5 text-black" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                          </svg>
                        </div>
                        <div>
                          <h4 className="font-bold text-white mb-1">Inversores</h4>
                          <p className="text-gray-300">investors@omniversestudios.com</p>
                          <p className="text-gray-400 text-sm">Para oportunidades de inversión</p>
                        </div>
                      </div>
                      
                      <div className="flex items-start">
                        <div className="w-10 h-10 bg-cyan-500 rounded-full flex items-center justify-center mr-4 mt-1">
                          <svg className="w-5 h-5 text-black" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9z" />
                            <path fillRule="evenodd" d="M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h2a1 1 0 100-2H7zm1 5a1 1 0 100 2h2a1 1 0 100-2H8z" clipRule="evenodd" />
                          </svg>
                        </div>
                        <div>
                          <h4 className="font-bold text-white mb-1">Prensa</h4>
                          <p className="text-gray-300">press@omniversestudios.com</p>
                          <p className="text-gray-400 text-sm">Kit de prensa y entrevistas</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        );
        
      default:
        return null;
    }
  };

  return (
    <div className="min-h-screen bg-[#0a0f1a] text-white overflow-x-hidden relative">
      {/* Cosmic Background */}
      <div id="stars-container" className="absolute inset-0 z-0"></div>
      
      {/* Floating Particles */}
      <div className="absolute inset-0 z-10 pointer-events-none">
        {[...Array(15)].map((_, i) => (
          <div
            key={i}
            className="absolute w-1 h-1 bg-cyan-400 rounded-full animate-float"
            style={{
              left: `${Math.random() * 100}%`,
              top: `${Math.random() * 100}%`,
              animationDelay: `${Math.random() * 5}s`,
              animationDuration: `${8 + Math.random() * 7}s`
            }}
          ></div>
        ))}
      </div>

      {/* CSS Styles for Animation */}
      <style jsx>{`
        @font-face {
          font-family: 'QuantumLemon';
          src: url('/fonts/QuantumLemon-Bold.ttf') format('truetype');
          font-weight: bold;
          font-style: normal;
        }
        
        @keyframes pulse {
          0%, 100% { opacity: 0.3; transform: scale(1); }
          50% { opacity: 0.8; transform: scale(1.2); }
        }
        
        @keyframes float {
          0% { transform: translateY(0) translateX(0); }
          50% { transform: translateY(-100px) translateX(50px); }
          100% { transform: translateY(-200px) translateX(0); }
        }
        
        .star {
          position: absolute;
          background-color: white;
          border-radius: 50%;
          pointer-events: none;
        }
        
        .glow-text {
          text-shadow: 
            0 0 10px rgba(0, 176, 255, 0.8),
            0 0 20px rgba(0, 176, 255, 0.6),
            0 0 30px rgba(0, 176, 255, 0.4);
          animation: glow 2s infinite alternate;
        }
        
        @keyframes glow {
          from { text-shadow: 0 0 10px rgba(0, 176, 255, 0.8), 0 0 20px rgba(0, 176, 255, 0.6); }
          to { text-shadow: 0 0 20px rgba(0, 176, 255, 0.9), 0 0 40px rgba(0, 176, 255, 0.7), 0 0 60px rgba(0, 176, 255, 0.5); }
        }
        
        .sci-fi-button {
          background: linear-gradient(145deg, #00b0ff, #0077ff);
          border: 1px solid rgba(0, 176, 255, 0.3);
          box-shadow: 0 0 15px rgba(0, 176, 255, 0.2);
          color: #ffffff;
          padding: 12px 24px;
          font-family: 'QuantumLemon', sans-serif;
          font-weight: bold;
          text-transform: uppercase;
          letter-spacing: 2px;
          cursor: pointer;
          transition: all 0.3s ease;
          position: relative;
          overflow: hidden;
          border-radius: 50px;
          display: inline-flex;
          align-items: center;
          justify-content: center;
        }
        
        .sci-fi-button::before {
          content: '';
          position: absolute;
          top: -50%;
          left: -50%;
          width: 200%;
          height: 200%;
          background: linear-gradient(
            135deg,
            transparent,
            rgba(0, 176, 255, 0.2),
            transparent
          );
          transform: rotate(45deg);
          transition: 0.5s;
        }
        
        .sci-fi-button:hover::before {
          left: 150%;
        }
        
        .sci-fi-button:hover {
          box-shadow: 0 0 25px rgba(0, 176, 255, 0.5);
          transform: translateY(-2px);
        }
        
        .nav-link {
          color: #fff;
          font-family: 'QuantumLemon', sans-serif;
          padding: 1rem 0;
          margin: 0 1rem;
          border-bottom: 2px solid transparent;
          transition: all 0.3s ease;
          position: relative;
          cursor: pointer;
          display: block;
        }
        
        .nav-link.active {
          color: #00b0ff;
          border-bottom: 2px solid #00b0ff;
        }
        
        .nav-link:hover {
          color: #00b0ff;
        }
        
        .form-container {
          background: rgba(10, 15, 30, 0.8);
          backdrop-filter: blur(10px);
          border: 1px solid rgba(0, 176, 255, 0.2);
          border-radius: 10px;
          padding: 2rem;
          max-width: 500px;
          margin: 0 auto;
        }
        
        .form-input {
          background: rgba(0, 0, 0, 0.5);
          border: 1px solid rgba(0, 176, 255, 0.3);
          color: white;
          padding: 12px;
          margin-bottom: 1rem;
          width: 100%;
          border-radius: 5px;
          font-family: 'QuantumLemon', sans-serif;
        }
        
        .form-input:focus {
          outline: none;
          box-shadow: 0 0 10px rgba(0, 176, 255, 0.5);
        }
        
        .success-message {
          background: rgba(10, 150, 10, 0.2);
          border: 1px solid rgba(10, 200, 10, 0.5);
          color: #aaffaa;
          padding: 1rem;
          border-radius: 5px;
          margin: 1rem 0;
          text-align: center;
          animation: fadeInOut 3s ease-in-out;
        }
        
        @keyframes fadeInOut {
          0% { opacity: 0; }
          50% { opacity: 1; }
          100% { opacity: 0; }
        }
        
        .vision-card {
          background: rgba(10, 15, 30, 0.8);
          border: 1px solid rgba(0, 176, 255, 0.2);
          border-radius: 10px;
          padding: 2rem;
          margin: 1rem;
          transition: transform 0.3s ease;
        }
        
        .vision-card:hover {
          transform: translateY(-5px);
          border-color: rgba(0, 176, 255, 0.5);
        }
        
        .icon {
          width: 40px;
          height: 40px;
          background: #00b0ff;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
          margin-bottom: 1rem;
        }
        
        /* Quantum Lemon Font */
        .quantum-lemon {
          font-family: 'QuantumLemon', sans-serif;
          font-weight: bold;
          letter-spacing: -0.02em;
          text-transform: uppercase;
        }
        
        .quantum-lemon-title {
          font-family: 'QuantumLemon', sans-serif;
          font-weight: bold;
          letter-spacing: -0.02em;
          text-transform: uppercase;
          text-shadow: 
            0 0 10px rgba(0, 176, 255, 0.8),
            0 0 20px rgba(0, 176, 255, 0.6),
            0 0 30px rgba(0, 176, 255, 0.4);
          animation: glow 2s infinite alternate;
        }
        
        /* Galaxy background for stars-container */
        #stars-container {
          position: absolute;
          inset: 0;
          background: radial-gradient(circle at center, #0a0f1a, #000);
          overflow: hidden;
        }
        
        #stars-container::before {
          content: '';
          position: absolute;
          inset: 0;
          background: 
            radial-gradient(circle at 30% 30%, rgba(100, 100, 255, 0.3) 0%, transparent 50%),
            radial-gradient(circle at 70% 70%, rgba(255, 100, 100, 0.3) 0%, transparent 50%),
            radial-gradient(circle at 50% 50%, rgba(100, 255, 100, 0.3) 0%, transparent 50%);
          animation: rotate 100s linear infinite;
        }
        
        #stars-container::after {
          content: '';
          position: absolute;
          inset: 0;
          background: 
            radial-gradient(circle at 20% 20%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),
            radial-gradient(circle at 80% 80%, rgba(255, 255, 255, 0.1) 0%, transparent 50%);
          animation: rotate 200s linear infinite;
        }
        
        @keyframes rotate {
          from { transform: rotate(0deg); }
          to { transform: rotate(360deg); }
        }
        
        /* Responsive navigation for mobile */
        .mobile-nav {
          display: none;
        }
        
        @media (max-width: 768px) {
          .mobile-nav {
            display: block;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100vh;
            background: rgba(10, 15, 30, 0.95);
            z-index: 100;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding-top: 80px;
          }
          
          .mobile-nav button {
            margin: 1rem 0;
            font-size: 1.5rem;
          }
        }
      `}</style>

      {/* Header */}
      <header className="relative z-20 p-4 border-b border-cyan-500/20">
        <div className="flex items-center justify-between container mx-auto">
          <div className="text-white font-bold text-xl tracking-wider quantum-lemon">
            OMNIVERSE GAMES
          </div>
          
          <nav className="hidden md:flex space-x-6">
            {['inicio', 'proyectos', 'equipo', 'carreras', 'contacto'].map((item) => (
              <button
                key={item}
                onClick={() => handleNavClick(item)}
                className={`nav-link ${activeSection === item ? 'active' : ''}`}
              >
                {item.charAt(0).toUpperCase() + item.slice(1)}
              </button>
            ))}
          </nav>
          
          <button className="bg-cyan-600 hover:bg-cyan-500 text-white px-6 py-2 rounded-full transition-colors duration-300 font-medium sci-fi-button">
            VER THE PRIMORDIAL BATTLEZONE
          </button>
        </div>
      </header>

      {/* Main Content */}
      <main className="relative z-20">
        {renderSection()}
      </main>

      {/* Footer */}
      <footer className="relative z-20 p-8 bg-[#0a0f1a] border-t border-gray-800">
        <div className="container mx-auto px-6">
          <div className="flex flex-col md:flex-row justify-between">
            <div className="mb-8 md:mb-0">
              <div className="text-white font-bold text-xl tracking-wider quantum-lemon mb-4">
                OMNIVERSE GAMES
              </div>
              <p className="text-gray-400 mb-4">
                Creando el futuro del entretenimiento interactivo, un universo a la vez.
              </p>
              <div className="flex space-x-4">
                <a href="#" className="text-gray-400 hover:text-cyan-400 transition-colors">
                  <svg className="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.184-.896-.957-2.173-1.555-3.591-1.555-2.717 0-4.92 2.203-4.92 4.917 0 .388.045.768.127 1.135-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-1.683 1.319-3.815 2.105-6.117 2.105-.39 0-.779-.023-1.175-.067 2.181 1.395 4.768 2.212 7.581 2.212 9.054 0 13.99-7.496 13.99-13.985 0-.21 0-.42-.015-.629 1.007-.734 1.86-1.734 2.418-2.917z"/>
                  </svg>
                </a>
                <a href="#" className="text-gray-400 hover:text-cyan-400 transition-colors">
                  <svg className="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-2 16h-2v-6h2v6zm-1-6.891c-.608 0-1.1-.492-1.1-1.109 0-.616.492-1.109 1.1-1.109s1.1.493 1.1 1.109c0 .617-.493 1.109-1.1 1.109zm8 6.891h-1.998v-2.861c0-.907-.103-1.528-.417-1.938-.313-.41-.857-.615-1.627-.615-1.032 0-1.854.593-1.854 1.822v2.557h-2.001v-6h2.001v1.038h.046c.534-.894 1.645-1.546 3.094-1.546 1.88 0 3.162 1.278 3.162 3.223v3.288z"/>
                  </svg>
                </a>
                <a href="#" className="text-gray-400 hover:text-cyan-400 transition-colors">
                  <svg className="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.564-2.005.974-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.66 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.629a10.01 10.01 0 002.49-2.575l-.001-.001z"/>
                  </svg>
                </a>
              </div>
            </div>
            
            <div className="grid grid-cols-2 gap-8">
              <div>
                <h3 className="font-bold text-white mb-4">Juegos</h3>
                <ul className="space-y-2 text-gray-400">
                  <li><a href="#" className="hover:text-cyan-400 transition-colors">The Primordial Battlezone</a></li>
                  <li><a href="#" className="hover:text-cyan-400 transition-colors">Proyectos</a></li>
                  <li><a href="#" className="hover:text-cyan-400 transition-colors">Blog</a></li>
                </ul>
              </div>
              
              <div>
                <h3 className="font-bold text-white mb-4">Contacto</h3>
                <ul className="space-y-2 text-gray-400">
                  <li><a href="#" className="hover:text-cyan-400 transition-colors">Prensa</a></li>
                  <li><a href="mailto:bankaipc@gmail.com" className="hover:text-cyan-400 transition-colors">Inversores</a></li>
                  <li><a href="mailto:bankaipc@gmail.com" className="hover:text-cyan-400 transition-colors">Email</a></li>
                </ul>
              </div>
            </div>
          </div>
          
          <div className="mt-8 pt-8 border-t border-gray-800 text-center text-gray-500 text-sm">
            © 2025 Omniverse Games. Todos los derechos reservados. | Contacto: bankaipc@gmail.com
          </div>
        </div>
      </footer>

      {/* NDA Modal */}
      {isNdaModalOpen && (
        <div className="fixed inset-0 z-50 flex items-center justify-center p-4 bg-black bg-opacity-70">
          <div className="form-container relative">
            <button
              onClick={() => setIsNdaModalOpen(false)}
              className="absolute top-4 right-4 text-gray-400 hover:text-white text-2xl font-bold"
            >
              ×
            </button>
            
            <h3 className="text-3xl font-bold mb-6 text-center text-cyan-400">INVERSOR NDA AGREEMENT</h3>
            <p className="text-gray-300 mb-8 text-center">
              Para acceder a nuestra propuesta de inversión, por favor complete este formulario. 
              Le enviaremos inmediatamente nuestro documento de confidencialidad (NDA).
            </p>
            
            {submitSuccess && (
              <div className="success-message">
                ¡Gracias! Nuestro equipo se pondrá en contacto con usted en breve con el NDA.
              </div>
            )}
            
            <form onSubmit={handleSubmit}>
              <input
                type="text"
                name="name"
                placeholder="Nombre Completo *"
                value={formData.name}
                onChange={handleInputChange}
                className="form-input"
                required
              />
              
              <input
                type="email"
                name="email"
                placeholder="Correo Electrónico *"
                value={formData.email}
                onChange={handleInputChange}
                className="form-input"
                required
              />
              
              <textarea
                name="message"
                placeholder="¿Por qué está interesado en invertir en Omniverse Games? (Opcional)"
                value={formData.message}
                onChange={handleInputChange}
                className="form-input h-24"
              ></textarea>
              
              <div className="mt-6 text-center">
                <button
                  type="submit"
                  disabled={isSubmitting}
                  className="sci-fi-button text-xl w-full"
                >
                  {isSubmitting ? 'PROCESANDO...' : 'ENVIAR SOLICITUD NDA'}
                </button>
                
                <p className="text-xs text-gray-400 mt-4">
                  Al enviar este formulario, acepta recibir nuestra documentación confidencial de NDA.
                  Todas las solicitudes se envían a: <strong>bankaipc@gmail.com</strong>
                </p>
              </div>
            </form>
          </div>
        </div>
      )}
    </div>
  );
};

export default App;